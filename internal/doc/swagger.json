{
  "swagger": "2.0",
  "info": {
    "description": "API documentation for the go-tsukamoto project",
    "version": "1.0.0",
    "title": "go-tsukamoto API"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "tags": [
    {
      "name": "User",
      "description": "Operations related to users"
    },
    {
      "name": "Academic",
      "description": "Operations related to academic records"
    },
    {
      "name": "Achievement",
      "description": "Operations related to achievements"
    },
    {
      "name": "Activity",
      "description": "Operations related to activities"
    },
    {
      "name": "Course",
      "description": "Operations related to courses"
    },
    {
      "name": "Fuzzy",
      "description": "Operations related to fuzzy logic calculations"
    },
    {
      "name": "Thesis",
      "description": "Operations related to theses"
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "User"
        ],
        "description": "Register a new user with the provided details",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Login a user",
        "tags": [
          "User"
        ],
        "description": "Login a user with the provided credentials",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "$ref": "#/definitions/LoginUserResponse"
            }
          },
          "401": {
            "description": "Invalid username or password"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "summary": "Get user by ID",
        "tags": [
          "User"
        ],
        "description": "Get user details by user ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update user",
        "tags": [
          "User"
        ],
        "description": "Update user details by user ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete user",
        "tags": [
          "User"
        ],
        "description": "Delete user by user ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/detail/{id}": {
      "get": {
        "summary": "Get user with related data",
        "tags": [
          "User"
        ],
        "description": "Get user details along with related data by user ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "schema": {
              "$ref": "#/definitions/UserWithRelatedDataResponse"
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/academic": {
      "post": {
        "tags": ["Academic"],
        "summary": "Create academic record",
        "description": "Create a new academic record",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Academic record details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAcademicRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Academic record created successfully",
            "schema": {
              "$ref": "#/definitions/AcademicResponse"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/academic/{id}": {
      "get": {
        "tags": ["Academic"],
        "summary": "Get academic record by ID",
        "description": "Get academic record details by ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Academic record retrieved successfully",
            "schema": {
              "$ref": "#/definitions/AcademicResponse"
            }
          },
          "404": {
            "description": "Academic record not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": ["Academic"],
        "summary": "Update academic record",
        "description": "Update academic record details by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated academic record details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAcademicRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Academic record updated successfully",
            "schema": {
              "$ref": "#/definitions/AcademicResponse"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Academic record not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Academic"],
        "summary": "Delete academic record",
        "description": "Delete academic record by ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Academic record deleted successfully"
          },
          "404": {
            "description": "Academic record not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/academic/user/{user_id}": {
      "get": {
        "tags": ["Academic"],
        "summary": "Get academic records by user ID",
        "description": "Get academic records by user ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Academic records retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AcademicResponse"
              }
            }
          },
          "404": {
            "description": "Academic records not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/achievement": {
      "post": {
        "tags": ["Achievement"],
        "summary": "Create achievement",
        "description": "Create a new achievement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Achievement details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAchievementRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Achievement created successfully",
            "schema": {
              "$ref": "#/definitions/AchievementResponse"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/achievement/{id}": {
      "get": {
        "tags": ["Achievement"],
        "summary": "Get achievement by ID",
        "description": "Get achievement details by ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Achievement retrieved successfully",
            "schema": {
              "$ref": "#/definitions/AchievementResponse"
            }
          },
          "404": {
            "description": "Achievement not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": ["Achievement"],
        "summary": "Update achievement",
        "description": "Update achievement details by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated achievement details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAchievementRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Achievement updated successfully",
            "schema": {
              "$ref": "#/definitions/AchievementResponse"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Achievement not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Achievement"],
        "summary": "Delete achievement",
        "description": "Delete achievement by ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Achievement deleted successfully"
          },
          "404": {
            "description": "Achievement not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/achievement/user/{user_id}": {
      "get": {
        "tags": ["Achievement"],
        "summary": "Get achievements by user ID",
        "description": "Get achievements by user ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Achievements retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AchievementResponse"
              }
            }
          },
          "404": {
            "description": "Achievements not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/activity": {
      "post": {
        "tags": ["Activity"],
        "summary": "Create activity",
        "description": "Create a new activity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Activity details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateActivityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activity created successfully",
            "schema": {
              "$ref": "#/definitions/ActivityResponse"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/activity/{id}": {
      "get": {
        "tags": ["Activity"],
        "summary": "Get activity by ID",
        "description": "Get activity details by ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Activity retrieved successfully",
            "schema": {
              "$ref": "#/definitions/ActivityResponse"
            }
          },
          "404": {
            "description": "Activity not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": ["Activity"],
        "summary": "Update activity",
        "description": "Update activity details by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated activity details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateActivityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activity updated successfully",
            "schema": {
              "$ref": "#/definitions/ActivityResponse"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Activity not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Activity"],
        "summary": "Delete activity",
        "description": "Delete activity by ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Activity deleted successfully"
          },
          "404": {
            "description": "Activity not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/course": {
      "post": {
        "tags": ["Course"],
        "summary": "Create course",
        "description": "Create a new course",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Course details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCourseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Course created successfully",
            "schema": {
              "$ref": "#/definitions/CourseResponse"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": ["Course"],
        "summary": "Get courses",
        "description": "Get all courses",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Courses retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CourseResponse"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/courses/import": {
      "post": {
        "tags": ["Course"],
        "summary": "Import courses",
        "description": "Import courses from a JSON file",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Path to the JSON file",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "path_file": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Courses imported successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/course/{id}": {
      "get": {
        "tags": ["Course"],
        "summary": "Get course by ID",
        "description": "Get course details by ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Course retrieved successfully",
            "schema": {
              "$ref": "#/definitions/CourseResponse"
            }
          },
          "404": {
            "description": "Course not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": ["Course"],
        "summary": "Update course",
        "description": "Update course details by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated course details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCourseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Course updated successfully",
            "schema": {
              "$ref": "#/definitions/CourseResponse"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Course not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Course"],
        "summary": "Delete course",
        "description": "Delete course by ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Course deleted successfully"
          },
          "404": {
            "description": "Course not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/fuzzy": {
      "post": {
        "tags": ["Fuzzy"],
        "summary": "Calculate fuzzy logic",
        "description": "Calculate fuzzy logic for a student",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Fuzzy calculation request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FuzzyRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fuzzy calculation successful",
            "schema": {
              "$ref": "#/definitions/FuzzyResponseDTO"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/thesis": {
      "post": {
        "tags": ["Thesis"],
        "summary": "Create thesis",
        "description": "Create a new thesis",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Thesis details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateThesisRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Thesis created successfully",
            "schema": {
              "$ref": "#/definitions/ThesisResponse"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/thesis/{id}": {
      "get": {
        "tags": ["Thesis"],
        "summary": "Get thesis by ID",
        "description": "Get thesis details by ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Thesis retrieved successfully",
            "schema": {
              "$ref": "#/definitions/ThesisResponse"
            }
          },
          "404": {
            "description": "Thesis not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": ["Thesis"],
        "summary": "Update thesis",
        "description": "Update thesis details by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated thesis details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateThesisRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Thesis updated successfully",
            "schema": {
              "$ref": "#/definitions/ThesisResponse"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Thesis not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Thesis"],
        "summary": "Delete thesis",
        "description": "Delete thesis by ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Thesis deleted successfully"
          },
          "404": {
            "description": "Thesis not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/thesis/student/{student_id}": {
      "get": {
        "tags": ["Thesis"],
        "summary": "Get theses by student ID",
        "description": "Get theses by student ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Theses retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ThesisResponse"
              }
            }
          },
          "404": {
            "description": "Theses not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "CreateUserRequest": {
      "type": "object",
      "required": [
        "username",
        "name",
        "nim",
        "password",
        "start_year"
      ],
      "properties": {
        "username": {
          "type": "string",
          "maxLength": 50
        },
        "name": {
          "type": "string",
          "maxLength": 50
        },
        "nim": {
          "type": "string",
          "maxLength": 20
        },
        "password": {
          "type": "string"
        },
        "start_year": {
          "type": "integer"
        }
      }
    },
    "UpdateUserRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "maxLength": 50
        },
        "name": {
          "type": "string",
          "maxLength": 50
        },
        "nim": {
          "type": "string",
          "maxLength": 20
        },
        "start_year": {
          "type": "integer"
        }
      }
    },
    "LoginUserRequest": {
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "username": {
          "type": "string",
          "maxLength": 50
        },
        "password": {
          "type": "string"
        }
      }
    },
    "UserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nim": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "start_year": {
          "type": "integer"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "LoginUserResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        }
      }
    },
    "UserWithRelatedDataResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nim": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "start_year": {
          "type": "integer"
        },
        "academic": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "achievements": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "activity": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "thesis": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CreateAcademicRequest": {
      "type": "object",
      "required": [
        "user_id",
        "ipk",
        "ips",
        "repeated_courses",
        "semester",
        "year"
      ],
      "properties": {
        "user_id": {
          "type": "integer"
        },
        "ipk": {
          "type": "number",
          "format": "float"
        },
        "ips": {
          "type": "number",
          "format": "float"
        },
        "repeated_courses": {
          "type": "integer"
        },
        "semester": {
          "type": "integer"
        },
        "year": {
          "type": "integer"
        },
        "predicate_id": {
          "type": "integer"
        }
      }
    },
    "UpdateAcademicRequest": {
      "type": "object",
      "properties": {
        "ipk": {
          "type": "number",
          "format": "float"
        },
        "ips": {
          "type": "number",
          "format": "float"
        },
        "repeated_courses": {
          "type": "integer"
        },
        "semester": {
          "type": "integer"
        },
        "year": {
          "type": "integer"
        },
        "predicate_id": {
          "type": "integer"
        }
      }
    },
    "AcademicResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "user_id": {
          "type": "integer"
        },
        "ipk": {
          "type": "number",
          "format": "float"
        },
        "ips": {
          "type": "number",
          "format": "float"
        },
        "repeated_courses": {
          "type": "integer"
        },
        "semester": {
          "type": "integer"
        },
        "year": {
          "type": "integer"
        },
        "predicate_id": {
          "type": "integer"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CreateAchievementRequest": {
      "type": "object",
      "required": [
        "user_id",
        "title",
        "description",
        "date"
      ],
      "properties": {
        "user_id": {
          "type": "integer"
        },
        "title": {
          "type": "string",
          "maxLength": 100
        },
        "description": {
          "type": "string",
          "maxLength": 500
        },
        "date": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "UpdateAchievementRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "maxLength": 100
        },
        "description": {
          "type": "string",
          "maxLength": 500
        },
        "date": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "AchievementResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "user_id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CreateActivityRequest": {
      "type": "object",
      "required": [
        "user_id",
        "title",
        "description",
        "date"
      ],
      "properties": {
        "user_id": {
          "type": "integer"
        },
        "title": {
          "type": "string",
          "maxLength": 100
        },
        "description": {
          "type": "string",
          "maxLength": 500
        },
        "date": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "UpdateActivityRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "maxLength": 100
        },
        "description": {
          "type": "string",
          "maxLength": 500
        },
        "date": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "ActivityResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "user_id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CreateCourseRequest": {
      "type": "object",
      "required": [
        "code",
        "course_name",
        "credit_course"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "course_name": {
          "type": "string"
        },
        "credit_course": {
          "type": "integer"
        }
      }
    },
    "UpdateCourseRequest": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "course_name": {
          "type": "string"
        },
        "credit_course": {
          "type": "integer"
        }
      }
    },
    "CourseResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "code": {
          "type": "string"
        },
        "course_name": {
          "type": "string"
        },
        "credit_course": {
          "type": "integer"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "FuzzyRequestDTO": {
      "type": "object",
      "required": [
        "user_id"
      ],
      "properties": {
        "user_id": {
          "type": "integer"
        }
      }
    },
    "FuzzyResponseDTO": {
      "type": "object",
      "properties": {
        "student_id": {
          "type": "integer"
        },
        "ipk": {
          "type": "number",
          "format": "float"
        },
        "semester": {
          "type": "integer"
        },
        "mata_kuliah_ulang": {
          "type": "integer"
        },
        "prestasi_level": {
          "type": "string"
        },
        "prestasi_rank": {
          "type": "integer"
        },
        "skripsi_level": {
          "type": "string"
        },
        "skripsi_impact": {
          "type": "number",
          "format": "float"
        },
        "jumlah_aktivitas": {
          "type": "integer"
        },
        "hasil_predicate": {
          "type": "string"
        }
      }
    },
    "CreateThesisRequest": {
      "type": "object",
      "required": [
        "user_id",
        "title",
        "year",
        "semester",
        "value",
        "level"
      ],
      "properties": {
        "user_id": {
          "type": "integer"
        },
        "title": {
          "type": "string",
          "maxLength": 255
        },
        "year": {
          "type": "integer"
        },
        "semester": {
          "type": "integer"
        },
        "value": {
          "type": "string",
          "maxLength": 50
        },
        "level": {
          "type": "string",
          "maxLength": 50
        }
      }
    },
    "UpdateThesisRequest": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer"
        },
        "title": {
          "type": "string",
          "maxLength": 255
        },
        "year": {
          "type": "integer"
        },
        "semester": {
          "type": "integer"
        },
        "value": {
          "type": "string",
          "maxLength": 50
        },
        "level": {
          "type": "string",
          "maxLength": 50
        }
      }
    },
    "ThesisResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "user_id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "year": {
          "type": "integer"
        },
        "semester": {
          "type": "integer"
        },
        "value": {
          "type": "string"
        },
        "level": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  }
}